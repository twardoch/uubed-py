name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install -e .[test]
    
    - name: Run tests
      run: |
        python scripts/test.py
    
    - name: Test CLI
      run: |
        uubed info
        echo "Testing CLI encode/decode..."
        echo "test data" > test.txt
        uubed encode test.txt -m eq64 -o encoded.txt
        uubed decode encoded.txt -m eq64 -o decoded.txt
        # Basic verification that files exist
        ls -la encoded.txt decoded.txt
    
    - name: Test imports with optional dependencies
      run: |
        python -c "import uubed; print('Core imports work')"
        python -c "from uubed.integrations import vectordb; print('Vector DB integration works')"
        python -c "from uubed import gpu; print('GPU module works (fallback expected)')"
        python -c "from uubed import matryoshka; print('Matryoshka module works')"

  test-optional-deps:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Test minimal installation
      run: |
        python -m pip install --upgrade pip
        # Install only core dependencies
        pip install numpy click rich
        pip install -e . --no-deps
        python -c "import uubed; print('Minimal install works')"
        python scripts/test.py