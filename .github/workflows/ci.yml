name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install hatch
        run: |
          python -m pip install --upgrade pip
          pip install hatch hatch-vcs

      - name: Install dependencies
        run: |
          pip install -e .[test]
          pip install ruff mypy bandit safety

      - name: Run code quality checks
        run: |
          # Linting
          ruff check src tests
          # Formatting
          ruff format --check src tests
          # Type checking
          mypy src/uubed --ignore-missing-imports || true
          # Security scanning
          bandit -r src/ || true
          safety check || true

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12']

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install hatch
        run: |
          python -m pip install --upgrade pip
          pip install hatch hatch-vcs

      - name: Build package
        run: |
          python scripts/build.py

      - name: Install from wheel
        shell: bash
        run: |
          pip install dist/*.whl

      - name: Run tests
        run: |
          pip install pytest pytest-cov
          python scripts/test_runner.py

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        with:
          file: ./coverage.xml

  build-validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install hatch
        run: |
          python -m pip install --upgrade pip
          pip install hatch hatch-vcs

      - name: Test build script
        run: |
          python scripts/build.py

      - name: Validate package structure
        run: |
          pip install twine
          twine check dist/*

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/

  integration-test:
    runs-on: ubuntu-latest
    needs: [quality, test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install hatch
        run: |
          python -m pip install --upgrade pip
          pip install hatch hatch-vcs

      - name: Test complete build and test pipeline
        run: |
          python scripts/build_and_test.py --all

      - name: Test CLI functionality
        run: |
          pip install -e .
          uubed info
          # Test basic encoding functionality
          echo "test data" > test.txt
          uubed encode test.txt -m eq64 -o encoded.txt || echo "Expected failure for now"
